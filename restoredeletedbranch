<!-- START -->
<h1>üö® Important Notice: Automatic Deletion of Source Branches on Merge</h1>

<h2>üîî Project-Level Change Alert</h2>

<p>
To maintain repository hygiene and streamline branch management, we have enabled the <strong>"Delete source branch on merge"</strong> setting at the project level in Bitbucket Data Center. 
</p>

<p>
This change <strong>automatically enables the "Delete source branch" checkbox</strong> in the merge pull request dialog box.
</p>

<h3>üìå What Does This Mean for You?</h3>
<ul>
  <li>When merging a pull request, the **source branch will be deleted by default** unless you manually uncheck the option.</li>
  <li>If you are merging a **main/master, release, or hotfix branch**, <strong>double-check before merging</strong> to avoid unintended deletions.</li>
  <li>If a critical branch is deleted inadvertently, **follow the recovery steps below** to restore it.</li>
</ul>

<hr />

<h1>üõ† How to Recover a Deleted Branch in Bitbucket Data Center</h1>

<h2>1Ô∏è‚É£ Quick Summary of Recovery Options</h2>
<ol>
  <li><strong>Using Bitbucket UI:</strong> If the deleted branch‚Äôs commit is still visible in the repository:
    <ul>
      <li>Find the last commit of the deleted branch in the <strong>Commits</strong> view.</li>
      <li>Create a new branch from that commit.</li>
    </ul>
  </li>
  <li><strong>Using Git CLI:</strong> If you cannot find the commit in Bitbucket:
    <ul>
      <li>Use <code>git reflog</code> or <code>git log</code> in your local repository to find the commit hash.</li>
      <li>Create and push a new branch from that commit.</li>
    </ul>
  </li>
</ol>

<hr />

<h2>2Ô∏è‚É£ Recovery Through the Bitbucket UI</h2>

<ol>
  <li><strong>Navigate to the Repository</strong>
    <ul>
      <li>Log in to Bitbucket Data Center.</li>
      <li>Go to the <strong>Project</strong> containing the repository.</li>
      <li>Select the <strong>Repository</strong> you‚Äôre working with.</li>
    </ul>
  </li>
  <li><strong>Locate the Commit</strong>
    <ul>
      <li>Click on <strong>Commits</strong> (in the left-hand sidebar).</li>
      <li>Search for the commit associated with the deleted branch.</li>
      <li>If you recently merged the pull request, go to the <strong>Pull Requests</strong> section and find the merged PR.</li>
      <li>Copy or note the <strong>commit hash</strong> (a 40-character string).</li>
    </ul>
  </li>
  <li><strong>Create a New Branch</strong>
    <ul>
      <li>In the <strong>Commits</strong> or <strong>Pull Request</strong> view, open the commit details.</li>
      <li>Click <strong>Create Branch</strong> from this commit.</li>
      <li>Give the branch a meaningful name (e.g., <code>recovered-branch</code>).</li>
      <li>Confirm creation.</li>
    </ul>
  </li>
  <li><strong>Verification</strong>
    <ul>
      <li>Go to the <strong>Branches</strong> view in Bitbucket.</li>
      <li>Confirm that the restored branch is listed.</li>
    </ul>
  </li>
</ol>

<hr />

<h2>3Ô∏è‚É£ Recovery Through Local Git CLI</h2>

<ol>
  <li><strong>Open Terminal / Command Prompt</strong>
    <ul>
      <li>Ensure you have a local clone of the repository.</li>
    </ul>
  </li>
  <li><strong>Fetch All References</strong>
    <pre><code>git fetch --all</code></pre>
    <p>This updates your local repository with all remote references.</p>
  </li>
  <li><strong>Locate the Last Commit of the Deleted Branch</strong>
    <ul>
      <li>If you previously had the branch checked out, try:
        <pre><code>git reflog</code></pre>
        Look for entries referencing the deleted branch and copy the commit hash.
      </li>
      <li>Alternatively, search by commit message:
        <pre><code>git log --all --grep="some commit message from the branch"</code></pre>
      </li>
    </ul>
  </li>
  <li><strong>Restore the Branch</strong>
    <pre><code>git checkout -b recovered-branch &lt;COMMIT_HASH&gt;</code></pre>
    <p>Replace <code>&lt;COMMIT_HASH&gt;</code> with the actual commit ID.</p>
  </li>
  <li><strong>Push the Branch Back to Bitbucket</strong>
    <pre><code>git push -u origin recovered-branch</code></pre>
    <p>Verify that the branch is now available in Bitbucket.</p>
  </li>
</ol>

<hr />

<h2>4Ô∏è‚É£ Common Issues & Troubleshooting</h2>

<ul>
  <li><strong>Commit Not Found in Bitbucket UI:</strong> If commits are missing, check your local Git history using <code>git reflog</code> or <code>git log</code>.</li>
  <li><strong>Git Garbage Collection (GC):</strong> If the repository has removed old commits, the branch may be unrecoverable unless someone has a local copy.</li>
  <li><strong>Permission Issues:</strong> Ensure you have branch creation rights in the repository.</li>
</ul>

<hr />

<h2>5Ô∏è‚É£ Best Practices to Avoid Accidental Deletion</h2>
<ul>
  <li>Always <strong>double-check</strong> the "Delete source branch" checkbox when merging.</li>
  <li>For important branches (main, release, hotfix), consider protecting them using branch permissions in Bitbucket.</li>
  <li>Use <strong>tags</strong> before merging if you want a persistent reference.</li>
</ul>

<hr />

<h2>6Ô∏è‚É£ Conclusion</h2>
<p>
With the new project-level setting, branches will be deleted on merge unless manually unchecked. If you accidentally delete an important branch, you can restore it using the methods outlined above. Always verify the merge settings before finalizing a pull request.
</p>

<hr />

<p><strong>üìå Document Revision History</strong></p>
<ul>
  <li><strong>Version 1.0</strong> ‚Äì Project-level change notification and branch recovery guide.</li>
  <li><strong>Version 1.1</strong> ‚Äì Added troubleshooting and best practices.</li>
</ul>
<!-- END -->


