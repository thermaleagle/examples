<!-- START -->
<h1>üö® Important Notice: Changes to Branch Deletion on Merge</h1>

<h2>üîî Project-Level Change Alert</h2>

<p>
To improve repository management, we have enabled the **"Delete source branch on merge"** setting for feature branches while **protecting release, main, and hotfix branches from deletion** at the project level.
</p>

<h3>üìå What This Means for You</h3>
<ul>
  <li>**Feature branches (feature/*, bugfix/*, task/*)** will be **automatically deleted on merge**, unless manually unchecked.</li>
  <li>**Main, master, release, and hotfix branches cannot be deleted at the project level**, even if someone tries to delete them manually.</li>
  <li>**Repository admins can override this restriction at the repository level** (instructions below).</li>
</ul>

<hr />

<h2>üõ† How Repository Admins Can Override Branch Protection Rules</h2>

<p>
While project-level settings prevent deletion of critical branches, **repository administrators can override these settings** to allow deletion within their own repositories.
</p>

<h3>üöÄ Steps for Repository Admins to Allow Branch Deletion</h3>

<ol>
  <li><strong>Open Repository Settings</strong>
    <ul>
      <li>Go to **Bitbucket Data Center**.</li>
      <li>Navigate to your **Project** and select the **Repository** where you want to allow deletions.</li>
      <li>Click on **Repository Settings**.</li>
    </ul>
  </li>
  
  <li><strong>Modify Branch Permissions</strong>
    <ul>
      <li>Scroll to **Branch Permissions**.</li>
      <li>Locate the protection rules preventing deletion of:
        <ul>
          <li><code>main</code></li>
          <li><code>master</code></li>
          <li><code>release/*</code></li>
          <li><code>hotfix/*</code></li>
        </ul>
      </li>
      <li>Click **Edit** next to the rule.</li>
      <li>Under **"Allowed to delete branches"**, grant permission to specific users or teams.</li>
      <li>Save changes.</li>
    </ul>
  </li>
  
  <li><strong>Manually Delete a Protected Branch</strong>
    <ul>
      <li>Once deletion permissions are enabled, go to **Branches**.</li>
      <li>Find the branch you want to delete (e.g., <code>release/1.0.0</code>).</li>
      <li>Click the **Trash Bin (Delete)** icon next to the branch.</li>
      <li>Confirm deletion.</li>
    </ul>
  </li>
</ol>

<p>
üí° **Warning:** This action permanently deletes the branch. If unsure, create a backup or tag before deletion.
</p>

<hr />

<h1>üõ† How to Recover a Deleted Branch in Bitbucket Data Center</h1>

<h2>1Ô∏è‚É£ Quick Summary of Recovery Options</h2>
<ol>
  <li><strong>Using Bitbucket UI:</strong> If the deleted branch‚Äôs commit is still visible in the repository:
    <ul>
      <li>Find the last commit of the deleted branch in the <strong>Commits</strong> view.</li>
      <li>Create a new branch from that commit.</li>
    </ul>
  </li>
  <li><strong>Using Git CLI:</strong> If you cannot find the commit in Bitbucket:
    <ul>
      <li>Use <code>git reflog</code> or <code>git log</code> in your local repository to find the commit hash.</li>
      <li>Create and push a new branch from that commit.</li>
    </ul>
  </li>
</ol>

<hr />

<h2>2Ô∏è‚É£ Recovery Through the Bitbucket UI</h2>

<ol>
  <li><strong>Navigate to the Repository</strong>
    <ul>
      <li>Log in to Bitbucket Data Center.</li>
      <li>Go to the <strong>Project</strong> containing the repository.</li>
      <li>Select the <strong>Repository</strong> you‚Äôre working with.</li>
    </ul>
  </li>
  <li><strong>Locate the Commit</strong>
    <ul>
      <li>Click on <strong>Commits</strong> (in the left-hand sidebar).</li>
      <li>Search for the commit associated with the deleted branch.</li>
      <li>If you recently merged the pull request, go to the <strong>Pull Requests</strong> section and find the merged PR.</li>
      <li>Copy or note the <strong>commit hash</strong> (a 40-character string).</li>
    </ul>
  </li>
  <li><strong>Create a New Branch</strong>
    <ul>
      <li>In the <strong>Commits</strong> or <strong>Pull Request</strong> view, open the commit details.</li>
      <li>Click <strong>Create Branch</strong> from this commit.</li>
      <li>Give the branch a meaningful name (e.g., <code>recovered-branch</code>).</li>
      <li>Confirm creation.</li>
    </ul>
  </li>
</ol>

<hr />

<h2>3Ô∏è‚É£ Recovery Through Local Git CLI</h2>

<ol>
  <li><strong>Open Terminal / Command Prompt</strong>
    <ul>
      <li>Ensure you have a local clone of the repository.</li>
    </ul>
  </li>
  <li><strong>Fetch All References</strong>
    <pre><code>git fetch --all</code></pre>
    <p>This updates your local repository with all remote references.</p>
  </li>
  <li><strong>Locate the Last Commit of the Deleted Branch</strong>
    <ul>
      <li>If you previously had the branch checked out, try:
        <pre><code>git reflog</code></pre>
        Look for entries referencing the deleted branch and copy the commit hash.
      </li>
      <li>Alternatively, search by commit message:
        <pre><code>git log --all --grep="some commit message from the branch"</code></pre>
      </li>
    </ul>
  </li>
  <li><strong>Restore the Branch</strong>
    <pre><code>git checkout -b recovered-branch &lt;COMMIT_HASH&gt;</code></pre>
    <p>Replace <code>&lt;COMMIT_HASH&gt;</code> with the actual commit ID.</p>
  </li>
</ol>

<hr />

<h2>4Ô∏è‚É£ Best Practices to Avoid Accidental Deletion</h2>
<ul>
  <li>Always <strong>double-check</strong> the "Delete source branch" checkbox when merging.</li>
  <li>For important branches (main, release, hotfix), **deletion is blocked by default**, but repo admins can override this.</li>
  <li>Use <strong>tags</strong> before merging if you want a persistent reference.</li>
</ul>

<hr />

<h2>5Ô∏è‚É£ Conclusion</h2>
<p>
With the new project-level setting, **feature branches will be deleted automatically upon merge**, while **release, main, master, and hotfix branches are protected by default**. However, repository admins can modify permissions if needed. If an important branch is deleted, follow the recovery steps above.
</p>

<hr />

<p><strong>üìå Document Revision History</strong></p>
<ul>
  <li><strong>Version 1.0</strong> ‚Äì Initial documentation for branch deletion settings.</li>
  <li><strong>Version 1.1</strong> ‚Äì Updated to reflect branch protection rules.</li>
  <li><strong>Version 1.2</strong> ‚Äì Added instructions for repository admins to override deletion restrictions.</li>
</ul>
<!-- END -->


